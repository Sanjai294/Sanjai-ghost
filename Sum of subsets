SUM OF SUBSETS

#include <iostream>
using namespace std;

int w[20], x[20], m;
float r;

class subset {
public:
    void getdata();
    void print(int);
    void sumofsub(float, int, float);
};

void subset::getdata() {
    int i, n;
    cout << "\nEnter the value of N: ";
    cin >> n;
    cout << "\nEnter the capacity: ";
    cin >> m;
    r = 0;
    for (i = 1; i <= n; i++) {
        cout << "\nWeight " << i << ": ";
        cin >> w[i];
        r = r + w[i];
    }
}

// s - loaded 
// r - remaining
// w[k] - current load
// k - load number
// m - capacity
void subset::sumofsub(float s, int k, float r) {
    x[k] = 1;
    if (s + w[k] == m) {
        print(k);
    } else if (s + w[k] + w[k + 1] <= m) {
        sumofsub(s + w[k], k + 1, r - w[k]);
    }

    if ((s + r - w[k] >= m) && (s + w[k + 1] <= m)) {
        x[k] = 0;
        sumofsub(s, k + 1, r - w[k]);
    }
}

void subset::print(int k) {
    int j;
    for (j = 1; j <= k; j++) {
        cout << x[j] << "\t";
    }
    cout << "\n\n";
}

int main() {
    subset s1;
    cout << "\n\nSUM OF SUBSET:\n\n";
    s1.getdata();
    s1.sumofsub(0, 1, r);
    return 0;
}
